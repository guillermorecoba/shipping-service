{
    "info": {
        "_postman_id": "fd969bdf-68ce-449e-b143-e83392158560",
		    "name": "MonolithToMicroservicesExample",
	    	"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
	     	"_exporter_id": "28585041"
    },
    "item": [
        {
            "name": "Shipping Endpoint Test",
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "http://{{baseUrl}}/shipping/c",
                    "host": [
                        "http://{{baseUrl}}"
                    ],
                    "path": [
                        "shipping",
                        "c"
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test('Response status code is 200', function () {",
                            "  pm.expect(pm.response.code).to.equal(200);",
                            "});",
                            "",
                            "pm.test('Response time is less than 500ms', function () {",
                            "  pm.expect(pm.response.responseTime).to.be.below(500);",
                            "});",
                            "",
                            "pm.test('Response has the required fields - status and id', function () {",
                            "    const responseData = pm.response.json();",
                            "    pm.expect(responseData).to.be.an('object');",
                            "    pm.expect(responseData).to.have.property('status');",
                            "    pm.expect(responseData).to.have.property('id');",
                            "});",
                            "",
                            "pm.test('Status is a non-empty string', function () {",
                            "    const responseData = pm.response.json();",
                            "    pm.expect(responseData.status).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Status should be a non-empty string');",
                            "});",
                            "",
                            "pm.test('Id is a non-empty string', function () {",
                            "    const responseData = pm.response.json();",
                            "    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Id should be a non-empty string');",
                            "});"
                        ]
                    }
                }
            ]
        }
    ]
}
